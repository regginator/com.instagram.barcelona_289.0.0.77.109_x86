package p000X;

import ch.boye.httpclientandroidlib.HttpStatus;
import com.facebook.common.dextricks.OptSvcAnalyticsStore;
import com.facebook.common.dextricks.StringTreeSet;
import com.facebook.smartcapture.logging.SCEventNames;
import com.facebook.tigon.iface.TigonRequest;
import com.instagram.debug.quickexperiment.dumper.QuickExperimentDumperPlugin;
/* JADX WARN: Failed to restore enum class, 'enum' modifier and super class removed */
/* JADX WARN: Unknown enum class pattern. Please report as an issue! */
/* renamed from: X.FfE  reason: case insensitive filesystem */
/* loaded from: classes6.dex */
public final class EnumC29803FfE implements InterfaceC095009q {
    public static final /* synthetic */ EnumC29803FfE[] A01;
    public static final EnumC29803FfE A02;
    public static final EnumC29803FfE A03;
    public static final EnumC29803FfE A04;
    public static final EnumC29803FfE A05;
    public final String A00;

    public static EnumC29803FfE A00(String str, String str2, int i) {
        return new EnumC29803FfE(str, i, str2);
    }

    public static EnumC29803FfE valueOf(String str) {
        return (EnumC29803FfE) Enum.valueOf(EnumC29803FfE.class, str);
    }

    public static EnumC29803FfE[] values() {
        return (EnumC29803FfE[]) A01.clone();
    }

    @Override // p000X.InterfaceC095009q
    public final /* bridge */ /* synthetic */ Object getValue() {
        return this.A00;
    }

    public EnumC29803FfE(String str, int i, String str2) {
        this.A00 = str2;
    }

    static {
        EnumC29803FfE A00 = A00("ACCEPT", "accept", 0);
        EnumC29803FfE A002 = A00("ADD_EXISTING_USER", "add_existing_user", 1);
        EnumC29803FfE A003 = A00("ADD_LABEL", "add_label", 2);
        EnumC29803FfE A004 = A00("ADD_MESSAGING_USERS", "add_messaging_users", 3);
        EnumC29803FfE A005 = A00("ADD_SUGGESTED_KEYWORD", "add_suggested_keyword", 4);
        EnumC29803FfE A006 = A00("ALLOW", "allow", 5);
        EnumC29803FfE A007 = A00("ANIMATION", "animation", 6);
        EnumC29803FfE A008 = A00("APPLY", "apply", 7);
        EnumC29803FfE A009 = A00("ASYNC_SCHEDULED", "async_scheduled", 8);
        EnumC29803FfE A0010 = A00("ASYNC_SUCCESS", "async_success", 9);
        EnumC29803FfE A0011 = A00("ASYNC_TRIGGERED", "async_triggered", 10);
        EnumC29803FfE A0012 = A00("AWAY_MESSAGE_AUTOMATION_SUGGESTION", "away_message_automation_suggestion", 11);
        EnumC29803FfE A0013 = A00("BACK", "back", 12);
        EnumC29803FfE A0014 = A00("BACKFILL_JOB_FINISHED", "backfill_job_finished", 13);
        EnumC29803FfE A0015 = A00("BACKFILL_JOB_MESSENGER_THREADS_QUERIED", "backfill_job_messenger_threads_queried", 14);
        EnumC29803FfE A0016 = A00("BACKFILL_JOB_SCHEDULED", "backfill_job_scheduled", 15);
        EnumC29803FfE A0017 = A00("BACKFILL_JOB_STARTED", "backfill_job_started", 16);
        EnumC29803FfE A0018 = A00("BLOCK", "block", 17);
        EnumC29803FfE A0019 = A00("BLUR", "blur", 18);
        EnumC29803FfE A0020 = A00("BOOST", "boost", 19);
        EnumC29803FfE A0021 = A00("BOOST_FAILURE", "boost_failure", 20);
        EnumC29803FfE A0022 = A00("BOOST_SUCCESS", "boost_success", 21);
        EnumC29803FfE A0023 = A00("CAN_PRIVATE_REPLY_FALSE", "can_private_reply_false", 22);
        EnumC29803FfE A0024 = A00("CAN_PRIVATE_REPLY_TRUE", "can_private_reply_true", 23);
        EnumC29803FfE A0025 = A00("CANCEL", "cancel", 24);
        EnumC29803FfE A0026 = A00("CANCEL_FLOW", "cancel_flow", 25);
        EnumC29803FfE A0027 = A00("CANDIDATE_FOUND", "candidate_found", 26);
        EnumC29803FfE A0028 = A00("CHANGE", "change", 27);
        EnumC29803FfE A0029 = A00("CHECK_CONDITIONS", "check_conditions", 28);
        EnumC29803FfE A0030 = A00("CHECK_DEVICE_PERMISSION_AUTH_STATUS", "check_device_permission_auth_status", 29);
        EnumC29803FfE A0031 = A00("CLEAR", QuickExperimentDumperPlugin.CLEAR_CMD, 30);
        EnumC29803FfE A0032 = A00("CLICK", "click", 31);
        EnumC29803FfE A0033 = A00("CLICK_DISABLED", "click_disabled", 32);
        EnumC29803FfE A0034 = A00("CLICK_EDIT", "click_edit", 33);
        EnumC29803FfE A0035 = A00("CLICK_ENTRY", "click_entry", 34);
        EnumC29803FfE A0036 = A00("CLICK_READ", "click_read", 35);
        EnumC29803FfE A0037 = A00("CLICK_SECONDARY_BUTTON", "click_secondary_button", 36);
        EnumC29803FfE A0038 = A00("CLICK_SYSTEM_BACK_BUTTON", "click_system_back_button", 37);
        EnumC29803FfE A0039 = A00("CLICK_UNREAD", "click_unread", 38);
        EnumC29803FfE A0040 = A00("CLICK_UNREAD_FILTER", "click_unread_filter", 39);
        EnumC29803FfE A0041 = A00("CLOSE", "close", 40);
        EnumC29803FfE A0042 = A00("COLLAPSE", "collapse", 41);
        EnumC29803FfE A0043 = A00("COMMENT_TO_MESSAGE_AUTOMATION_SUGGESTION", "comment_to_message_automation_suggestion", 42);
        EnumC29803FfE A0044 = A00("CONFIG_IS_NOT_NULL", "config_is_not_null", 43);
        EnumC29803FfE A0045 = A00("CONFIG_IS_NULL", "config_is_null", 44);
        EnumC29803FfE A0046 = A00("CONFIRM", "confirm", 45);
        EnumC29803FfE A0047 = A00("CONTINUE", "continue", 46);
        EnumC29803FfE A0048 = A00("CREATE", "create", 47);
        EnumC29803FfE A0049 = A00("CREATE_ERROR", "create_error", 48);
        EnumC29803FfE A0050 = A00("CREATE_LEGACY", "create_legacy", 49);
        EnumC29803FfE A0051 = A00("CREATE_SUCCESS", "create_success", 50);
        EnumC29803FfE A0052 = A00("CRITICAL", "critical", 51);
        EnumC29803FfE A0053 = A00("CTA_CLICK_IRIS_OBSERVER", "cta_click_iris_observer", 52);
        EnumC29803FfE A0054 = A00("CUSTOMER_MESSAGE_INFO_PASS_CONDITION", "customer_message_info_pass_condition", 53);
        EnumC29803FfE A0055 = A00("DEBUG", "debug", 54);
        EnumC29803FfE A0056 = A00("DELETE", "delete", 55);
        EnumC29803FfE A0057 = A00("DELETE_ERROR", "delete_error", 56);
        EnumC29803FfE A0058 = A00("DELETE_SUCCESS", "delete_success", 57);
        EnumC29803FfE A0059 = A00("DENY", "deny", 58);
        A02 = A0059;
        EnumC29803FfE A0060 = A00("DETECTOR", "detector", 59);
        EnumC29803FfE A0061 = A00("DISABLE", "disable", 60);
        EnumC29803FfE A0062 = A00("DISMISS", "dismiss", 61);
        EnumC29803FfE A0063 = A00("DISMISS_SAVED_REPLY_SUGGESTION", "dismiss_saved_reply_suggestion", 62);
        EnumC29803FfE A0064 = A00("DISMISS_TOAST", "dismiss_toast", 63);
        EnumC29803FfE A0065 = A00("DISPLAY_LOADING_VIEW", "display_loading_view", 64);
        EnumC29803FfE A0066 = A00("DISPLAY_NEW_FEATURE_INDICATOR", "display_new_feature_indicator", 65);
        EnumC29803FfE A0067 = A00("DOES_CONSENT_EXIST", "does_consent_exist", 66);
        EnumC29803FfE A0068 = A00("DONE", "done", 67);
        EnumC29803FfE A0069 = A00("DRAG", "drag", 68);
        EnumC29803FfE A0070 = A00("DROP", "drop", 69);
        EnumC29803FfE A0071 = A00("ELIGIBLE", "eligible", 70);
        EnumC29803FfE A0072 = A00("ENABLE", "enable", 71);
        EnumC29803FfE A0073 = A00("ENTER_FLOW", "enter_flow", 72);
        EnumC29803FfE A0074 = A00("ERROR", "error", 73);
        A03 = A0074;
        EnumC29803FfE A0075 = A00("EVENT_BROADCAST_ATTEMPT", "event_broadcast_attempt", 74);
        EnumC29803FfE A0076 = A00("EVENT_BROADCAST_FAILURE", "event_broadcast_failure", 75);
        EnumC29803FfE A0077 = A00("EVENT_BROADCAST_SUCCESS", "event_broadcast_success", 76);
        EnumC29803FfE A0078 = A00("EXECUTE", "execute", 77);
        EnumC29803FfE A0079 = A00("EXIT", "exit", 78);
        EnumC29803FfE A0080 = A00("EXIT_FLOW", "exit_flow", 79);
        EnumC29803FfE A0081 = A00("EXPAND", "expand", 80);
        EnumC29803FfE A0082 = A00("EXTERNAL_EVENT", "external_event", 81);
        EnumC29803FfE A0083 = A00("FAIL_CONDITION", "fail_condition", 82);
        EnumC29803FfE A0084 = A00("FAIL_INTEGRITY_GATING", "fail_integrity_gating", 83);
        EnumC29803FfE A0085 = A00("FAILURE", OptSvcAnalyticsStore.LOGGING_KEY_DEX2OAT_FAILURE, 84);
        EnumC29803FfE A0086 = A00("FALLBACK", "fallback", 85);
        EnumC29803FfE A0087 = A00("FALLBACK_RECOVERY", "fallback_recovery", 86);
        EnumC29803FfE A0088 = A00("FEATURES_GENERATED", "features_generated", 87);
        EnumC29803FfE A0089 = A00("FETCH", TigonRequest.FETCH, 88);
        EnumC29803FfE A0090 = A00("FILTER", "filter", 89);
        EnumC29803FfE A0091 = A00("FINISH", "finish", 90);
        EnumC29803FfE A0092 = A00("FLOW_STEP_IMPRESSION", "flow_step_impression", 91);
        EnumC29803FfE A0093 = A00("FOCUS", "focus", 92);
        EnumC29803FfE A0094 = A00("FOCUS_ACQUIRED", "focus_acquired", 93);
        EnumC29803FfE A0095 = A00("FOCUS_LOST", "focus_lost", 94);
        EnumC29803FfE A0096 = A00("GESTURE", "gesture", 95);
        EnumC29803FfE A0097 = A00("GET_ML_INTENT", "get_ml_intent", 96);
        EnumC29803FfE A0098 = A00("GET_STARTED_NOT_RENDERED", "get_started_not_rendered", 97);
        EnumC29803FfE A0099 = A00("GRANT", "grant", 98);
        A04 = A0099;
        EnumC29803FfE A00100 = A00("HANDLE_FAILURE", "handle_failure", 99);
        EnumC29803FfE A00101 = A00("HANDLE_SUCCESS", "handle_success", 100);
        EnumC29803FfE A00102 = A00("HIDE_SUGGESTION", "hide_suggestion", HttpStatus.SC_SWITCHING_PROTOCOLS);
        EnumC29803FfE A00103 = A00("HOVER", "hover", HttpStatus.SC_PROCESSING);
        EnumC29803FfE A00104 = A00("HYDRATION_FAILURE", "hydration_failure", 103);
        EnumC29803FfE A00105 = A00("HYDRATION_SUCCESS", "hydration_success", 104);
        EnumC29803FfE A00106 = A00("IG_THREAD_CONDITION_INFO", "ig_thread_condition_info", 105);
        EnumC29803FfE A00107 = A00("IMPORT", "import", 106);
        EnumC29803FfE A00108 = A00("IMPRESSION", "impression", 107);
        EnumC29803FfE A00109 = A00("INELIGIBLE", "ineligible", 108);
        EnumC29803FfE A00110 = A00("INFO", "info", 109);
        EnumC29803FfE A00111 = A00("INIT_POSE_LOAD_ERROR", "init_pose_load_error", 110);
        EnumC29803FfE A00112 = A00("INIT_POSE_LOADED", "init_pose_loaded", 111);
        EnumC29803FfE A00113 = A00("INIT_RENDER", "init_render", 112);
        EnumC29803FfE A00114 = A00("INIT_SERVER", "init_server", 113);
        EnumC29803FfE A00115 = A00("INSTANT_REPLY_AUTOMATION_SUGGESTION", "instant_reply_automation_suggestion", 114);
        EnumC29803FfE A00116 = A00("INSUFFICIENT_PERMISSIONS_FAILURE", "insufficient_permissions_failure", 115);
        EnumC29803FfE A00117 = A00("INVITE", "invite", 116);
        EnumC29803FfE A00118 = A00("INVITE_USER_NONRETRYABLE_ERROR", "invite_user_nonretryable_error", 117);
        EnumC29803FfE A00119 = A00("IS_CONSENTED", "is_consented", 118);
        EnumC29803FfE A00120 = A00("IS_REVOKED", "is_revoked", 119);
        EnumC29803FfE A00121 = A00("LAND_ATTEMPT", "land_attempt", 120);
        EnumC29803FfE A00122 = A00("LAND_FAILURE", "land_failure", 121);
        EnumC29803FfE A00123 = A00("LAUNCH", "launch", 122);
        EnumC29803FfE A00124 = A00("LAUNCH_MARKETPLACE_EXPOSURE", "launch_marketplace_exposure", 123);
        EnumC29803FfE A00125 = A00("LINK", "link", 124);
        EnumC29803FfE A00126 = A00("LISTEN", "listen", 125);
        EnumC29803FfE A00127 = A00("LONG_PRESS", "long_press", 126);
        EnumC29803FfE A00128 = A00("MARK_AS_FOLLOW_UP", "mark_as_follow_up", StringTreeSet.MAX_SYMBOL_COUNT);
        EnumC29803FfE A00129 = A00("MARK_AS_UNREAD", "mark_as_unread", 128);
        EnumC29803FfE A00130 = A00("MARK_IMPORTANT", "mark_important", 129);
        EnumC29803FfE A00131 = A00("MARK_UNIMPORTANT", "mark_unimportant", 130);
        EnumC29803FfE A00132 = A00("MATCH", "match", 131);
        EnumC29803FfE A00133 = A00("MISMATCH", "mismatch", 132);
        EnumC29803FfE A00134 = A00("ML_DECISION", "ml_decision", 133);
        EnumC29803FfE A00135 = A00("MODIFY", "modify", 134);
        EnumC29803FfE A00136 = A00("MOVE_TO_MAIN", "move_to_main", 135);
        EnumC29803FfE A00137 = A00("MUTATION_ERROR", "mutation_error", 136);
        EnumC29803FfE A00138 = A00("MUTATION_START", "mutation_start", 137);
        EnumC29803FfE A00139 = A00("MUTATION_SUCCESS", "mutation_success", 138);
        EnumC29803FfE A00140 = A00("NEW_MESSAGE_RECEIVED", "new_message_received", 139);
        EnumC29803FfE A00141 = A00("NEXT", SCEventNames.Params.STEP_CHANGE_NEXT, 140);
        EnumC29803FfE A00142 = A00("OBSERVER_BACKUP_ASYNC_JOB_FAILURE", "observer_backup_async_job_failure", 141);
        EnumC29803FfE A00143 = A00("OBSERVER_BACKUP_ASYNC_JOB_SUCCESS", "observer_backup_async_job_success", 142);
        EnumC29803FfE A00144 = A00("OBSERVER_EARLY_EXIT", "observer_early_exit", 143);
        EnumC29803FfE A00145 = A00("OBSERVER_FAILURE", "observer_failure", 144);
        EnumC29803FfE A00146 = A00("OBSERVER_SCHEDULE_BACKUP_ASYNC_JOB", "observer_schedule_backup_async_job", 145);
        EnumC29803FfE A00147 = A00("OBSERVER_START", "observer_start", 146);
        EnumC29803FfE A00148 = A00("OBSERVER_SUCCESS", "observer_success", 147);
        EnumC29803FfE A00149 = A00("OBSERVER_TRIGGERED", "observer_triggered", 148);
        EnumC29803FfE A00150 = A00("OBSERVER_WRITE", "observer_write", 149);
        EnumC29803FfE A00151 = A00("OFF", "off", 150);
        EnumC29803FfE A00152 = A00("ON", "on", 151);
        EnumC29803FfE A00153 = A00("OPEN", "open", 152);
        EnumC29803FfE A00154 = A00("OUTCOME", "outcome", 153);
        EnumC29803FfE A00155 = A00("PARSING_MESSAGE_FAILURE", "parsing_message_failure", 154);
        EnumC29803FfE A00156 = A00("PARSING_MESSAGE_SUCCESS", "parsing_message_success", 155);
        EnumC29803FfE A00157 = A00("PARTIAL", "partial", 156);
        A05 = A00157;
        EnumC29803FfE A00158 = A00("PASS", "pass", 157);
        EnumC29803FfE A00159 = A00("PASS_CONDITION", "pass_condition", 158);
        EnumC29803FfE A00160 = A00("PASS_ELIGIBILITY_CHECK", "pass_eligibility_check", 159);
        EnumC29803FfE A00161 = A00("PAUSE", "pause", 160);
        EnumC29803FfE A00162 = A00("PERFORM_ACTION", "perform_action", 161);
        EnumC29803FfE A00163 = A00("PLAY", "play", 162);
        EnumC29803FfE A00164 = A00("PRE_MESSAGE_GET_TEXT_FAILURE", "pre_message_get_text_failure", 163);
        EnumC29803FfE A00165 = A00("PRE_MESSAGE_GET_TEXT_IS_NOT_NULL", "pre_message_get_text_is_not_null", 164);
        EnumC29803FfE A00166 = A00("PRE_MESSAGE_GET_TEXT_IS_NULL", "pre_message_get_text_is_null", 165);
        EnumC29803FfE A00167 = A00("PRE_MESSAGE_GET_TEXT_SUCCESS", "pre_message_get_text_success", 166);
        EnumC29803FfE A00168 = A00("PRE_MESSAGE_SEND_FAILURE", "pre_message_send_failure", 167);
        EnumC29803FfE A00169 = A00("PRE_MESSAGE_SEND_SUCCESS", "pre_message_send_success", 168);
        EnumC29803FfE A00170 = A00("PREDICTION_EN_FALSE", "prediction_en_false", 169);
        EnumC29803FfE A00171 = A00("PREDICTION_EN_TRUE", "prediction_en_true", 170);
        EnumC29803FfE A00172 = A00("PREDICTION_OTHER_FALSE", "prediction_other_false", 171);
        EnumC29803FfE A00173 = A00("PREDICTION_OTHER_TRUE", "prediction_other_true", 172);
        EnumC29803FfE A00174 = A00("PREDICTION_TH_FALSE", "prediction_th_false", 173);
        EnumC29803FfE A00175 = A00("PREDICTION_TH_TRUE", "prediction_th_true", 174);
        EnumC29803FfE A00176 = A00("PREDICTION_VI_FALSE", "prediction_vi_false", 175);
        EnumC29803FfE A00177 = A00("PREDICTION_VI_TRUE", "prediction_vi_true", 176);
        EnumC29803FfE A00178 = A00("PREDICTOR_FAILURE", "predictor_failure", 177);
        EnumC29803FfE A00179 = A00("PREDICTOR_SUCCESS", "predictor_success", 178);
        EnumC29803FfE A00180 = A00("PREVIEW", "preview", 179);
        EnumC29803FfE A00181 = A00("PREVIEW_FAILURE", "preview_failure", 180);
        EnumC29803FfE A00182 = A00("PREVIEW_SUCCESS", "preview_success", 181);
        EnumC29803FfE A00183 = A00("PRIVACY_ALLOWED_FALSE", "privacy_allowed_false", 182);
        EnumC29803FfE A00184 = A00("PRIVACY_ALLOWED_TRUE", "privacy_allowed_true", 183);
        EnumC29803FfE A00185 = A00("PROCESSING_FAILURE", "processing_failure", 184);
        EnumC29803FfE A00186 = A00("PROCESSING_SUCCESS", "processing_success", 185);
        EnumC29803FfE A00187 = A00("PROVIDE_CONSENT", "provide_consent", 186);
        EnumC29803FfE A00188 = A00("PROVIDE_CONSENT_FOR_CHANGESET", "provide_consent_for_changeset", 187);
        EnumC29803FfE A00189 = A00("PUBLISH", "publish", 188);
        EnumC29803FfE A00190 = A00("PUBLISH_FAILURE", "publish_failure", 189);
        EnumC29803FfE A00191 = A00("PUBLISH_SUCCESS", "publish_success", 190);
        EnumC29803FfE A00192 = A00("QUERY", "query", 191);
        EnumC29803FfE A00193 = A00("RANKED", "ranked", 192);
        EnumC29803FfE A00194 = A00("READ_CONSENT_DATA", "read_consent_data", 193);
        EnumC29803FfE A00195 = A00("READ_DATA_LEGACY", "read_data_legacy", 194);
        EnumC29803FfE A00196 = A00("READ_DATA_WITH_DEVICE_PERMISSION", "read_data_with_device_permission", 195);
        EnumC29803FfE A00197 = A00("RECEIVE", "receive", 196);
        EnumC29803FfE A00198 = A00("RECEIVE_REQUEST", "receive_request", 197);
        EnumC29803FfE A00199 = A00("RECEIVE_REQUEST_FALSE", "receive_request_false", 198);
        EnumC29803FfE A00200 = A00("RECEIVE_REQUEST_TRUE", "receive_request_true", 199);
        EnumC29803FfE A00201 = A00("RECEIVE_RESPONSE", "receive_response", 200);
        EnumC29803FfE A00202 = A00("RECEIVE_RESPONSE_FAILURE", "receive_response_failure", HttpStatus.SC_CREATED);
        EnumC29803FfE A00203 = A00("RECEIVE_RESPONSE_SUCCESS", "receive_response_success", HttpStatus.SC_ACCEPTED);
        EnumC29803FfE A00204 = A00("REDIRECT", "redirect", HttpStatus.SC_NON_AUTHORITATIVE_INFORMATION);
        EnumC29803FfE A00205 = A00("REDIRECT_MARKETPLACE_EXPOSURE", "redirect_marketplace_exposure", HttpStatus.SC_NO_CONTENT);
        EnumC29803FfE A00206 = A00("REJECT", "reject", HttpStatus.SC_RESET_CONTENT);
        EnumC29803FfE A00207 = A00("REMOVE_SUGGESTED_KEYWORD", "remove_suggested_keyword", HttpStatus.SC_PARTIAL_CONTENT);
        EnumC29803FfE A00208 = A00("REMOVE_TOKEN", "remove_token", HttpStatus.SC_MULTI_STATUS);
        EnumC29803FfE A00209 = A00("RENDER_GET_STARTED", "render_get_started", 208);
        EnumC29803FfE A00210 = A00("RENDER_MESSAGE_FAILURE", "render_message_failure", 209);
        EnumC29803FfE A00211 = A00("RENDER_MESSAGE_SUCCESS", "render_message_success", 210);
        EnumC29803FfE A00212 = A00("RENDER_VIEW", "render_view", 211);
        EnumC29803FfE A00213 = A00("REQUEST", "request", 212);
        EnumC29803FfE A00214 = A00("REQUEST_DEVICE_PERMISSION", "request_device_permission", 213);
        EnumC29803FfE A00215 = A00("RESET_CONSENT", "reset_consent", 214);
        EnumC29803FfE A00216 = A00("RESTRICT", "restrict", 215);
        EnumC29803FfE A00217 = A00("RETRIEVE_ERROR", "retrieve_error", 216);
        EnumC29803FfE A00218 = A00("REVOKE_CONSENT", "revoke_consent", 217);
        EnumC29803FfE A00219 = A00("REVOKE_CONSENT_FOR_CHANGESET", "revoke_consent_for_changeset", 218);
        EnumC29803FfE A00220 = A00("SAVE", "save", 219);
        EnumC29803FfE A00221 = A00("SAVE_FAILURE", "save_failure", 220);
        EnumC29803FfE A00222 = A00("SAVE_SUCCESS", "save_success", 221);
        EnumC29803FfE A00223 = A00("SCHEDULE", "schedule", 222);
        EnumC29803FfE A00224 = A00("SCHEDULE_FAILURE", "schedule_failure", 223);
        EnumC29803FfE A00225 = A00("SCHEDULE_SUCCESS", "schedule_success", 224);
        EnumC29803FfE A00226 = A00("SCROLL", "scroll", 225);
        EnumC29803FfE A00227 = A00("SCROLL_END", "scroll_end", 226);
        EnumC29803FfE A00228 = A00("SEARCH", "search", 227);
        EnumC29803FfE A00229 = A00("SEE_ALL", "see_all", 228);
        EnumC29803FfE A00230 = A00("SELECT", "select", 229);
        EnumC29803FfE A00231 = A00("SELECT_STAGE", "select_stage", 230);
        EnumC29803FfE A00232 = A00("SELECT_TEXT", "select_text", 231);
        EnumC29803FfE A00233 = A00("SELECTED", "selected", 232);
        EnumC29803FfE A00234 = A00("SEND", "send", 233);
        EnumC29803FfE A00235 = A00("SEND_FAILURE", "send_failure", 234);
        EnumC29803FfE A00236 = A00("SEND_REQUEST", "send_request", 235);
        EnumC29803FfE A00237 = A00("SEND_RESPONSE", "send_response", 236);
        EnumC29803FfE A00238 = A00("SEND_RESUBMIT", "send_resubmit", 237);
        EnumC29803FfE A00239 = A00("SEND_SUCCESS", "send_success", 238);
        EnumC29803FfE A00240 = A00("SERVER_BLOCK", "server_block", 239);
        EnumC29803FfE A00241 = A00("SHOW_SUGGESTION", "show_suggestion", 240);
        EnumC29803FfE A00242 = A00("SIGN", "sign", 241);
        EnumC29803FfE A00243 = A00("SNOOZE", "snooze", 242);
        EnumC29803FfE A00244 = A00("SORT", "sort", 243);
        EnumC29803FfE A00245 = A00("SPAM_FALSE", "spam_false", 244);
        EnumC29803FfE A00246 = A00("SPAM_TRUE", "spam_true", 245);
        EnumC29803FfE A00247 = A00("START", "start", 246);
        EnumC29803FfE A00248 = A00("SUBMIT", "submit", 247);
        EnumC29803FfE A00249 = A00("SUBMIT_FLOW", "submit_flow", 248);
        EnumC29803FfE A00250 = A00("SUBMIT_FLOW_CANCEL", "submit_flow_cancel", 249);
        EnumC29803FfE A00251 = A00("SUBMIT_FLOW_FAILURE", "submit_flow_failure", 250);
        EnumC29803FfE A00252 = A00("SUBMIT_FLOW_SUCCESS", "submit_flow_success", 251);
        EnumC29803FfE A00253 = A00("SUCCESS", "success", 252);
        EnumC29803FfE A00254 = A00("SWITCH_PROFILE", "switch_profile", 253);
        EnumC29803FfE A00255 = A00("TOGGLE", "toggle", 254);
        EnumC29803FfE A00256 = A00("TRIGGER", "trigger", 255);
        EnumC29803FfE A00257 = A00("TRIGGER_ATTEMPT", "trigger_attempt", 256);
        EnumC29803FfE A00258 = A00("TRIGGER_FAILURE", "trigger_failure", 257);
        EnumC29803FfE A00259 = A00("TRIGGER_SUCCESS", "trigger_success", 258);
        EnumC29803FfE A00260 = A00("TRIGGERED", "triggered", 259);
        EnumC29803FfE A00261 = A00("TURN_OFF", "turn_off", 260);
        EnumC29803FfE A00262 = A00("TURN_ON", "turn_on", 261);
        EnumC29803FfE A00263 = A00("TYPING", "typing", 262);
        EnumC29803FfE A00264 = A00("UNDO", "undo", 263);
        EnumC29803FfE A00265 = A00("UNDO_DISMISS", "undo_dismiss", 264);
        EnumC29803FfE A00266 = A00("UNDO_SNOOZE", "undo_snooze", 265);
        EnumC29803FfE A00267 = A00("UNLISTEN", "unlisten", 266);
        EnumC29803FfE A00268 = A00("UNSELECT", "unselect", 267);
        EnumC29803FfE A00269 = A00("UPDATE", "update", 268);
        EnumC29803FfE A00270 = A00("UPDATE_ERROR", "update_error", 269);
        EnumC29803FfE A00271 = A00("UPDATE_LEGACY", "update_legacy", 270);
        EnumC29803FfE A00272 = A00("UPDATE_SUCCESS", "update_success", 271);
        EnumC29803FfE A00273 = A00("UPDATE_VALUE", "update_value", 272);
        EnumC29803FfE A00274 = A00("UPLOAD", "upload", 273);
        EnumC29803FfE A00275 = A00("UPLOAD_FAILURE", "upload_failure", 274);
        EnumC29803FfE A00276 = A00("UPLOAD_SUCCESS", SCEventNames.UPLOAD_SUCCESS, 275);
        EnumC29803FfE A00277 = A00("UPSERT", "upsert", 276);
        EnumC29803FfE A00278 = A00("UPSERT_AND_SEND", "upsert_and_send", 277);
        EnumC29803FfE A00279 = A00("UPSERT_AND_SEND_ERROR", "upsert_and_send_error", 278);
        EnumC29803FfE A00280 = A00("UPSERT_AND_SEND_SUCCESS", "upsert_and_send_success", 279);
        EnumC29803FfE A00281 = A00("UPSERT_ERROR", "upsert_error", 280);
        EnumC29803FfE A00282 = A00("UPSERT_SUCCESS", "upsert_success", 281);
        EnumC29803FfE A00283 = A00("WARNING", "warning", 282);
        EnumC29803FfE A00284 = A00("WATERFALL", "waterfall", 283);
        EnumC29803FfE[] enumC29803FfEArr = new EnumC29803FfE[284];
        System.arraycopy(new EnumC29803FfE[]{A00, A002, A003, A004, A005, A006, A007, A008, A009, A0010, A0011, A0012, A0013, A0014, A0015, A0016, A0017, A0018, A0019, A0020, A0021, A0022, A0023, A0024, A0025, A0026, A0027}, 0, enumC29803FfEArr, 0, 27);
        System.arraycopy(new EnumC29803FfE[]{A0028, A0029, A0030, A0031, A0032, A0033, A0034, A0035, A0036, A0037, A0038, A0039, A0040, A0041, A0042, A0043, A0044, A0045, A0046, A0047, A0048, A0049, A0050, A0051, A0052, A0053, A0054}, 0, enumC29803FfEArr, 27, 27);
        System.arraycopy(new EnumC29803FfE[]{A0055, A0056, A0057, A0058, A0059, A0060, A0061, A0062, A0063, A0064, A0065, A0066, A0067, A0068, A0069, A0070, A0071, A0072, A0073, A0074, A0075, A0076, A0077, A0078, A0079, A0080, A0081}, 0, enumC29803FfEArr, 54, 27);
        System.arraycopy(new EnumC29803FfE[]{A0082, A0083, A0084, A0085, A0086, A0087, A0088, A0089, A0090, A0091, A0092, A0093, A0094, A0095, A0096, A0097, A0098, A0099, A00100, A00101, A00102, A00103, A00104, A00105, A00106, A00107, A00108}, 0, enumC29803FfEArr, 81, 27);
        System.arraycopy(new EnumC29803FfE[]{A00109, A00110, A00111, A00112, A00113, A00114, A00115, A00116, A00117, A00118, A00119, A00120, A00121, A00122, A00123, A00124, A00125, A00126, A00127, A00128, A00129, A00130, A00131, A00132, A00133, A00134, A00135}, 0, enumC29803FfEArr, 108, 27);
        System.arraycopy(new EnumC29803FfE[]{A00136, A00137, A00138, A00139, A00140, A00141, A00142, A00143, A00144, A00145, A00146, A00147, A00148, A00149, A00150, A00151, A00152, A00153, A00154, A00155, A00156, A00157, A00158, A00159, A00160, A00161, A00162}, 0, enumC29803FfEArr, 135, 27);
        System.arraycopy(new EnumC29803FfE[]{A00163, A00164, A00165, A00166, A00167, A00168, A00169, A00170, A00171, A00172, A00173, A00174, A00175, A00176, A00177, A00178, A00179, A00180, A00181, A00182, A00183, A00184, A00185, A00186, A00187, A00188, A00189}, 0, enumC29803FfEArr, 162, 27);
        System.arraycopy(new EnumC29803FfE[]{A00190, A00191, A00192, A00193, A00194, A00195, A00196, A00197, A00198, A00199, A00200, A00201, A00202, A00203, A00204, A00205, A00206, A00207, A00208, A00209, A00210, A00211, A00212, A00213, A00214, A00215, A00216}, 0, enumC29803FfEArr, 189, 27);
        System.arraycopy(new EnumC29803FfE[]{A00217, A00218, A00219, A00220, A00221, A00222, A00223, A00224, A00225, A00226, A00227, A00228, A00229, A00230, A00231, A00232, A00233, A00234, A00235, A00236, A00237, A00238, A00239, A00240, A00241, A00242, A00243}, 0, enumC29803FfEArr, 216, 27);
        System.arraycopy(new EnumC29803FfE[]{A00244, A00245, A00246, A00247, A00248, A00249, A00250, A00251, A00252, A00253, A00254, A00255, A00256, A00257, A00258, A00259, A00260, A00261, A00262, A00263, A00264, A00265, A00266, A00267, A00268, A00269, A00270}, 0, enumC29803FfEArr, 243, 27);
        System.arraycopy(new EnumC29803FfE[]{A00271, A00272, A00273, A00274, A00275, A00276, A00277, A00278, A00279, A00280, A00281, A00282, A00283, A00284}, 0, enumC29803FfEArr, 270, 14);
        A01 = enumC29803FfEArr;
    }
}
