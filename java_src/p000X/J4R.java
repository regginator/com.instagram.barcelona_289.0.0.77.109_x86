package p000X;

import com.facebook.dcp.model.Matrix;
import java.util.List;
/* renamed from: X.J4R */
/* loaded from: classes7.dex */
public final class J4R {
    public static final Matrix A00;
    public static final Matrix A01;
    public static final List A02;
    public static final float[] A03;
    public static final float[] A04;
    public static final int[] A05;
    public static final Matrix[] A06;
    public static final float[][] A07;
    public static final Matrix A08;
    public static final Matrix A09;
    public static final float[] A0A;
    public static final float[] A0B;

    static {
        String[] strArr = new String[38];
        System.arraycopy(new String[]{"3603", "3595", "3629", "3604", "3594", "2620", "3627", "3592", "3590", "3605", "3253", "3630", "3601", "2618", "3598", "3628", "3305", "3651", "3599", "3600", "3597", "3369", "3252", "3596", "3593", "3351", "3354"}, 0, strArr, 0, 27);
        System.arraycopy(new String[]{"3657", "3591", "3311", "3588", "3655", "3317", "3656", "3312", "3652", "3353", "3653"}, 0, strArr, 27, 11);
        A02 = C14200aH.A17(strArr);
        A05 = new int[]{32, 1};
        A03 = new float[]{0.35396f, 27.77541f, 0.25996f, 0.8289f, 25.95861f, 5.2944536E7f, 0.37762f, 0.95443f, 1.644768E9f, 0.88791f, 590.7998f, 0.1997f, 1.95072256E9f, 0.11238f, 25.45972f, 0.30111f, 4851.4165f, 5186.8804f, 27.21803f, 1.901648E9f, 6.42918f, 1.58625f, 0.82852f, 0.92107f, 6.61522f, 32.76244f, 3.0748436E7f, 6830.335f, 1.68093709E9f, 4816.182f, 1.63938419E9f, 1494.071f, 4975.4785f, 2746.9944f, 35.48227f, 27.27433f, 3.3007396E7f, 29.73185f};
        A04 = new float[]{1.0f, 30.0f, 0.97352f, 1.0f, 28.0f, 8.6399E7f, 0.97982f, 1.0f, 1.68119642E9f, 1.0f, 8917.0f, 0.97406f, 2.14748365E9f, 3.0f, 28.0f, 0.97628f, 85704.4f, 86327.0f, 30.0f, 2.14748365E9f, 7.0f, 3.0f, 0.99986f, 1.0f, 7.0f, 348.0f, 8.4159814E8f, 86356.0f, 1.68119642E9f, 85704.4f, 1.68119642E9f, 86325.0f, 104827.12f, 86325.0f, 1060.0f, 1898.0f, 1.13392896E9f, 1898.0f};
        float[][] fArr = new float[32];
        System.arraycopy(new float[][]{new float[]{-0.13732f, 3.19582f, -0.0478f, 0.04222f, 0.96535f, 0.18627f, -0.05803f, -0.10934f, 0.04332f, -0.04007f, 1.7E-4f, 0.05375f, 1.6829f, -0.2681f, 0.34327f, -0.06513f, 0.00927f, -0.13485f, 0.67004f, 0.28626f, -0.08741f, 0.06112f, 0.00618f, 0.05053f, -0.86894f, -0.08385f, -1.27086f, -0.01912f, -0.83824f, -0.18385f, 0.06304f, 0.02661f, 2.4E-4f, 0.76527f, 0.01899f, -0.31553f, 0.36245f, 0.17481f}, new float[]{0.16663f, -0.04954f, 0.21726f, -0.32328f, 0.16553f, 0.14197f, -0.06441f, 0.53988f, 0.02991f, -0.0879f, -0.01523f, 0.34879f, 0.09143f, -0.04046f, -0.19401f, 0.24675f, -0.44602f, -0.07664f, 0.07013f, 0.26541f, -0.03787f, 0.6996f, 1.39483f, -0.04444f, 0.19251f, 0.1281f, -0.58019f, 0.10777f, -0.36712f, -0.58184f, 0.07729f, 0.29514f, -0.13461f, 0.24018f, -0.61507f, -0.12036f, -0.11843f, 0.41675f}, new float[]{-0.43535f, -0.18628f, -0.12737f, -0.25398f, 0.05937f, -0.01978f, -0.10398f, 0.17484f, 0.03091f, -0.4462f, 0.0812f, -0.37538f, -0.25231f, -0.03625f, -0.2798f, -0.45961f, 0.05433f, 0.09152f, -0.19315f, -0.38201f, -0.08732f, -0.24219f, -0.67141f, -0.08975f, -0.26755f, 0.12587f, 0.19445f, 0.25296f, 0.18544f, 0.43118f, 0.10979f, -0.00441f, 0.23139f, 0.00959f, 1.14126f, 0.24229f, 0.32434f, -1.41029f}, new float[]{0.00666f, 0.01495f, 0.23327f, -0.04226f, -0.00959f, 0.01525f, -1.11553f, 0.13039f, -0.04887f, 0.32141f, 0.0136f, -0.35676f, -0.01928f, 0.1405f, 0.25921f, -0.30692f, 0.08818f, 0.0997f, -0.15942f, -0.06422f, 0.09179f, -0.14716f, -0.3356f, -0.12485f, 0.18525f, 1.41659f, 0.1062f, 0.10862f, -0.16586f, 0.03955f, 0.17725f, 0.05386f, -0.06679f, 0.13694f, -0.02575f, 0.08087f, 0.1466f, -0.03692f}, new float[]{-0.24008f, 2.53608f, -0.11381f, -0.02721f, 0.44469f, 0.12807f, -0.01846f, -0.42246f, 0.01653f, 0.13539f, 0.04104f, 0.01847f, 1.22612f, -0.38542f, 0.44619f, -0.01152f, 0.15082f, -0.6017f, 0.13059f, 0.46873f, 0.05553f, 0.30807f, -0.08969f, -0.36471f, -0.59723f, -0.024f, -1.62471f, 0.42645f, -0.73664f, -0.11673f, -0.09182f, -0.00474f, -0.10256f, 1.27872f, 0.07237f, -0.31975f, 0.39445f, 0.14529f}, new float[]{0.11783f, 0.23171f, -0.17271f, -0.37413f, 0.62619f, 0.52455f, 0.11771f, 0.80279f, 0.45223f, -0.37871f, 0.15115f, 0.23385f, 0.07239f, -0.14492f, -0.3925f, 0.1184f, 0.04031f, 0.03695f, 0.25227f, 0.30499f, -0.28178f, 0.5185f, 0.35638f, -0.15115f, 0.56486f, -0.5125f, -1.41768f, 0.16083f, 0.60399f, -0.03193f, 0.55637f, -0.60507f, 0.38505f, 0.1842f, 0.34941f, -0.37494f, -0.08473f, 0.3864f}, new float[]{-0.12919f, -0.06883f, -0.02059f, -0.37681f, -0.03501f, -0.03152f, -0.33791f, 0.28476f, -2.0E-5f, -0.38196f, 0.0055f, -0.06376f, -0.1355f, 0.07914f, -0.12176f, -0.30644f, -0.21198f, -0.18825f, 0.02383f, -0.00853f, -0.20497f, -0.08959f, -0.41726f, 0.03283f, 0.05338f, -0.07858f, 0.0829f, 0.05337f, 0.06927f, 0.1565f, 0.03001f, 0.33772f, 0.14957f, 0.29644f, 0.54496f, -0.79703f, -0.01494f, -3.89798f}, new float[]{-0.87358f, -0.16395f, 0.26447f, -0.40802f, -0.06674f, 1.34151f, -0.45577f, -0.13285f, -0.0677f, -0.25539f, 0.14865f, -0.39843f, -0.03038f, -0.06215f, -0.06806f, -0.08566f, 0.70781f, 0.13647f, -0.2139f, -0.43715f, -0.09454f, -0.55983f, -0.48236f, 0.03636f, -0.40265f, 0.07402f, 0.08582f, 0.3015f, 0.28918f, 0.93252f, 0.28161f, 0.00614f, 0.15639f, 0.18206f, 0.03994f, 0.36517f, 0.27733f, -0.44616f}, new float[]{0.1059f, -0.01001f, -0.1342f, 0.24497f, 0.01694f, -0.02779f, -0.14643f, -0.0493f, 0.06115f, 0.16888f, 0.01436f, 0.01191f, -0.03398f, -0.06685f, 0.08044f, -0.06239f, -0.0184f, -0.06215f, 0.23513f, -0.02781f, -0.06238f, 0.00779f, 0.01265f, 0.07163f, 0.06949f, -0.04738f, -1.97162f, 0.08562f, 0.07164f, 0.20128f, -0.00151f, 0.07277f, -0.27666f, 0.18103f, -0.47957f, 0.01152f, -0.79573f, -0.73837f}, new float[]{-0.2098f, -0.09362f, -0.15024f, -0.17153f, -0.13847f, 0.14456f, -0.01153f, -0.01002f, 0.12531f, 0.12563f, 0.04106f, 0.02932f, -0.28999f, -0.20405f, -0.04937f, -0.10946f, 0.05276f, -0.63588f, -0.06606f, -0.20866f, -0.01043f, 0.32795f, -0.29317f, -0.19255f, 0.74906f, 0.14233f, -0.05987f, 0.29955f, 0.26093f, -0.13454f, 0.54793f, -0.09853f, 0.29165f, 0.88396f, 0.36918f, -0.18014f, -4.36329f, 0.0667f}, new float[]{-0.88607f, -0.17205f, -0.303f, -0.1543f, -0.24738f, -1.47324f, -0.14206f, -0.35246f, -0.08048f, -0.27549f, -0.01899f, -0.37053f, -0.15602f, -0.18366f, 0.10131f, -0.11423f, 0.28396f, 0.26476f, -0.06008f, -0.08849f, 0.01607f, 0.02984f, -0.47896f, 0.14973f, -0.48303f, -0.15255f, 0.2433f, 0.4733f, 0.28133f, 0.04223f, -0.15293f, -0.17768f, 0.83547f, 0.17737f, 0.54125f, -0.0676f, -0.12497f, 0.0019f}, new float[]{-0.11009f, -0.05622f, -0.72357f, -0.23152f, 0.22797f, 7.3E-4f, -1.60051f, 0.52862f, -0.02187f, -0.12651f, 0.00362f, -0.45465f, -0.10739f, -0.06964f, -0.20013f, -1.14686f, -0.03498f, -0.22912f, 0.21874f, -0.17919f, -0.09687f, -0.07697f, -0.42975f, 0.05842f, 0.03403f, 0.25213f, 0.09205f, 0.30355f, 0.2842f, 0.18746f, 0.30527f, 0.12395f, 0.2189f, 0.65111f, 0.46781f, -0.18141f, 0.10434f, -2.11507f}, new float[]{-0.10782f, -0.04243f, -0.14446f, 0.07188f, -0.00183f, -0.08052f, -0.00836f, 0.13037f, -0.14746f, -0.08366f, -3.48617f, 0.0223f, 0.08116f, -0.11129f, -0.04722f, -0.07237f, -0.05355f, -0.01027f, -0.05247f, 0.2098f, 0.00669f, 0.10004f, -0.04608f, 0.10126f, -0.0677f, 0.26508f, -0.01013f, 0.00352f, 1.95886f, -0.26256f, -0.65357f, -0.07669f, -0.15372f, -0.08099f, 0.12071f, 0.16461f, -0.03599f, -0.00922f}, new float[]{-0.3696f, 0.21308f, 0.1105f, -0.11025f, 0.29327f, -0.21821f, -0.03108f, 0.01894f, -0.06373f, -0.159f, -1.85009f, -0.50838f, 0.07807f, 0.16175f, -0.20673f, -0.16177f, -0.44747f, -0.00353f, 0.24105f, 0.22322f, 0.08225f, 0.14176f, -0.18672f, -0.44757f, 0.73587f, 0.48233f, 0.13635f, 0.08285f, 0.60527f, -0.51041f, -0.77899f, 0.04482f, -0.28603f, -0.04524f, 0.04221f, 0.64677f, -0.02636f, -0.24577f}, new float[]{0.05551f, 0.00697f, -0.27764f, 0.04717f, 0.06978f, 0.01905f, -0.10493f, 0.10457f, 0.11855f, 0.04409f, -2.8862f, 0.06206f, -0.17395f, -0.09909f, 0.00174f, -0.36748f, 0.04672f, 0.00316f, -0.02347f, 0.09815f, 0.03144f, 0.08914f, -0.02339f, 0.13684f, 0.01007f, 0.12014f, -0.02165f, -0.03676f, 1.15408f, -0.02916f, -0.10949f, -0.00795f, -0.06289f, -0.02236f, 0.09038f, 0.15292f, 0.03016f, -0.04059f}, new float[]{0.25291f, 0.0995f, 0.0104f, -0.5702f, 0.14366f, 0.21425f, 0.14154f, 0.38958f, 0.27294f, 0.0075f, -0.07641f, 0.13412f, -0.07389f, 0.18427f, -0.20576f, 0.0757f, -0.33034f, -0.16793f, -0.05375f, -0.12804f, -0.05673f, 0.38801f, 0.99807f, -0.22944f, 0.29712f, 0.3555f, -1.13641f, -0.08614f, -0.3253f, -0.65894f, 0.06159f, -0.73571f, -0.26318f, 0.16397f, -0.47976f, -0.0778f, -0.11947f, 0.51545f}, new float[]{0.30191f, 0.16827f, -0.66949f, -0.47042f, 0.18971f, 0.23891f, 0.08565f, 1.329f, -0.07423f, -0.19018f, 0.05213f, -1.66731f, 0.03402f, -0.15025f, -0.17679f, 0.09591f, -0.18689f, -0.13481f, 0.13423f, 0.90059f, -0.18178f, 0.24857f, 0.07728f, 0.09744f, -0.08291f, -0.39051f, -0.65087f, -0.31947f, 0.52382f, -0.18855f, 0.9712f, -0.59238f, -0.1965f, 0.54216f, -0.11148f, -0.26229f, -0.61677f, 0.25515f}, new float[]{-0.27323f, -0.23933f, -0.21783f, -0.19651f, -0.17331f, 0.26565f, 0.00598f, -0.03868f, -0.03304f, 0.21829f, 0.02095f, -0.02923f, -0.7264f, 0.11843f, 0.15375f, 0.02092f, 0.28486f, -0.24544f, -0.25624f, -0.12559f, 0.21546f, 0.10463f, -0.03448f, 0.32564f, 1.84823f, -0.14621f, -2.36321f, 0.12399f, -0.32164f, -0.10733f, 0.03568f, -0.60914f, 0.31479f, 0.40522f, 0.26629f, -0.40524f, 0.59408f, 0.26785f}, new float[]{-0.19904f, -0.28055f, -0.07293f, -0.24253f, -0.00369f, 0.14079f, 0.06258f, 0.38096f, -0.17822f, -0.00891f, 0.04061f, 0.04579f, -0.50981f, -0.01261f, -0.25278f, 0.02239f, -0.13424f, 0.03464f, 0.065f, -0.16599f, 0.30676f, 0.45138f, 0.14148f, 0.26596f, 1.91371f, -0.22633f, -1.95428f, 0.16746f, -0.56213f, -0.15835f, 0.1538f, 0.07084f, 0.08122f, 0.03331f, 0.2434f, -0.51577f, 0.47233f, 0.29001f}, new float[]{0.18174f, -0.04897f, 0.18656f, -0.50522f, -0.05896f, 0.01243f, -0.02582f, 0.24643f, 0.00211f, 0.09363f, -0.02268f, -0.01898f, 0.17008f, 0.2245f, 0.06912f, 0.12047f, -0.02278f, -0.20362f, -0.27034f, 0.10663f, 0.02006f, 0.29239f, 1.4716f, 0.03022f, 0.24613f, 0.21308f, -1.32605f, 0.27218f, -0.44732f, -0.29937f, 0.12683f, -0.39612f, -0.18652f, 0.09952f, -0.33961f, -0.16447f, 0.69825f, 0.29578f}, new float[]{-0.49974f, -0.15235f, -0.13132f, -0.08806f, -0.07031f, 0.05825f, -0.19547f, 0.23475f, -0.0333f, -0.48633f, 0.04982f, -0.0031f, 0.08329f, -0.22441f, -0.00763f, -0.07747f, -0.10216f, -1.90159f, 0.22794f, 0.16628f, 0.02454f, -0.02821f, -0.11943f, 0.2902f, 0.09414f, -0.11407f, -0.05742f, -2.12052f, 0.16067f, 0.19019f, -0.50279f, 0.57677f, 0.38999f, -0.52935f, 0.29959f, -0.50313f, 0.03207f, -1.55024f}, new float[]{-0.0583f, 2.78727f, -0.04083f, 0.11483f, 0.32254f, 0.12859f, -0.04965f, -0.58308f, 0.0144f, 0.01444f, 0.03016f, 0.08977f, 1.68978f, -0.06942f, 0.66233f, 0.01826f, -0.12381f, -0.12015f, 0.33658f, 2.77326f, 0.05836f, 0.14586f, 0.1154f, -0.06976f, -0.60619f, -0.06908f, -0.98384f, 0.16556f, -0.76293f, -0.2733f, -0.42109f, 0.16805f, -0.19366f, 0.25666f, 0.01498f, -0.38043f, 0.24954f, 0.2161f}, new float[]{0.48552f, 0.22858f, -0.02659f, 0.14201f, 0.04533f, 0.06432f, 0.05886f, 0.39618f, -0.13944f, 0.12221f, -0.02163f, 0.10395f, -0.15751f, 0.00124f, 0.02938f, -0.07525f, 0.15809f, -0.98638f, -0.19524f, -0.55373f, -0.10468f, 1.06601f, 0.63217f, 0.00807f, -0.09434f, 0.67337f, -0.94436f, 0.31031f, -0.51007f, -0.10672f, -0.02837f, -0.19755f, 0.03135f, 0.97993f, -0.00652f, -0.29262f, -0.61021f, 0.23523f}, new float[]{0.16332f, -0.04279f, -0.23411f, -0.06659f, 0.09752f, 0.17332f, -0.0937f, 0.00268f, 0.00697f, 0.13714f, 0.06838f, 0.07326f, -0.18652f, -0.28697f, -0.07083f, -0.18592f, 0.15884f, -0.38424f, -0.06273f, 0.09081f, 0.06059f, -0.02432f, -0.16588f, -0.23663f, 0.34472f, 0.19791f, 0.03451f, 0.0916f, 0.45786f, -0.24373f, 0.32561f, -0.30597f, 0.27719f, 0.81347f, 0.35467f, -0.14212f, -4.50935f, 0.06619f}, new float[]{0.01001f, 0.09993f, -0.08959f, -0.2349f, 0.41558f, 0.47094f, 0.06258f, -0.03192f, 0.46728f, -0.34071f, 0.14595f, 0.30901f, -0.19642f, -0.09361f, -0.4975f, 0.21756f, -0.09507f, -0.0939f, 0.30482f, 0.45035f, 0.15497f, 0.6774f, 0.44281f, -0.5556f, 0.82398f, -0.51853f, -0.93486f, 0.07904f, 0.52062f, -0.08865f, 0.9102f, 0.05564f, 0.22035f, 0.33792f, 0.45061f, -0.25381f, -0.29482f, 0.28481f}, new float[]{0.02804f, 0.016f, 0.45324f, -0.24224f, 0.07772f, 0.06752f, -0.04415f, 0.42439f, -0.17533f, 0.0074f, -0.01592f, 0.31415f, 0.32844f, 0.05316f, 0.06185f, 0.06719f, -0.34724f, -0.0807f, -0.17901f, 0.3977f, 0.08223f, 0.58064f, 1.67062f, 0.03725f, -0.03233f, 0.18861f, -0.73139f, 0.15215f, -0.43026f, -0.67142f, -0.02124f, 0.22073f, -0.38495f, -0.10116f, -0.37099f, -0.24297f, 0.46485f, 0.40021f}, new float[]{0.16f, -0.03838f, -0.25012f, 0.21f, 0.03126f, 0.00556f, -0.34061f, 0.10952f, 0.01907f, 0.09403f, 0.03108f, 0.06484f, 0.03336f, 0.10573f, 0.20749f, -0.37297f, -0.16528f, -0.35187f, 0.13526f, 0.00402f, 0.00717f, -0.02838f, -0.04698f, 0.24923f, 0.09922f, -0.03842f, -1.87924f, -0.0907f, 0.00634f, -0.06076f, -0.06905f, 0.60511f, -0.0902f, 0.62566f, -0.12949f, -0.55372f, -0.68328f, -1.37322f}}, 0, fArr, 0, 27);
        Matrix A0P = C34903Hvd.A0P(new float[][]{new float[]{0.02054f, -0.23191f, -0.26157f, -0.37327f, -0.16591f, 0.72002f, 0.16344f, 0.18369f, 0.19305f, -0.01731f, 0.05832f, -0.01265f, -0.47144f, 0.04157f, -0.22512f, 0.04347f, 0.29701f, -0.2837f, -0.24331f, -0.08438f, -0.0643f, -0.02266f, -0.05951f, -0.30815f, 1.22009f, -0.0824f, -1.51569f, -0.27148f, 0.45803f, 0.17436f, 0.31385f, -0.55181f, 0.32271f, 0.91174f, 0.71158f, -0.39313f, -0.44822f, 0.27282f}, new float[]{-0.22162f, 3.38517f, -0.03181f, 0.33655f, 1.20663f, 0.28521f, -0.05448f, -0.61245f, 0.23039f, -0.1504f, 0.04111f, 0.2116f, 1.75736f, -0.11373f, 0.45559f, -0.08142f, -0.11463f, -0.10728f, 0.90966f, 0.11925f, -0.07985f, 0.34685f, 0.04533f, -0.00903f, -0.85736f, -0.11093f, -0.65623f, 0.13274f, -0.73214f, -0.26443f, 0.13176f, -0.01842f, -0.26076f, 0.29546f, -0.00277f, -0.33043f, -0.03041f, 0.20737f}, new float[]{0.77427f, 0.12327f, 0.58389f, 0.28416f, -0.28193f, 0.2064f, 0.419f, 0.08839f, -0.12126f, 0.24917f, -0.04292f, 0.05723f, -0.09157f, -0.01548f, 0.21291f, 0.41251f, 0.63486f, -0.17341f, -0.61872f, 0.08214f, -0.14527f, 0.19115f, -0.28033f, -0.01046f, -0.04869f, 0.07022f, 0.16387f, 0.32627f, -0.17185f, 0.09095f, -0.18937f, 0.17788f, 0.70034f, 0.01143f, 0.47698f, -0.13346f, 0.16717f, 0.07816f}, new float[]{0.33448f, 0.92202f, 0.02884f, 0.17459f, 1.14176f, 0.48748f, 0.07236f, 0.50355f, 0.48767f, -0.3179f, 0.144f, 0.42958f, 0.32945f, -0.25506f, -0.28053f, 0.03717f, -0.36791f, -0.21815f, 0.43988f, 0.17721f, -0.4061f, 0.51547f, 0.40766f, -0.1959f, -0.57049f, -0.52019f, -0.35698f, -0.00613f, 0.14677f, -0.12383f, 0.87319f, -0.24708f, -0.2167f, 0.28554f, 0.32963f, -0.42369f, -0.40643f, 0.26257f}, new float[]{0.10454f, 0.02385f, -0.21057f, -0.02417f, -8.5E-4f, -0.08113f, -0.27356f, 0.05761f, -0.00839f, 0.12006f, -1.98108f, 0.00444f, 0.07831f, 0.15641f, 0.19611f, -0.03313f, 0.24437f, -0.05937f, -0.15618f, 0.03851f, -0.055f, 0.08521f, -0.02979f, 0.12773f, -0.04932f, -0.72957f, 0.01864f, 0.04121f, -0.18582f, 0.00191f, 0.06116f, 0.08766f, -0.0622f, 0.11112f, 0.07659f, 0.18543f, -0.027f, -0.23852f}}, fArr);
        A08 = A0P;
        float[] fArr2 = {-0.06363f, 0.37117f, 0.34252f, -0.70297f, -0.4867f, 0.68837f, 0.41378f, -0.13088f, -0.66747f, -0.20867f, -0.21542f, 0.18853f, -0.4293f, 0.07027f, -0.62803f, 0.45334f, 0.44097f, -0.23275f, 0.29981f, -0.20347f, -0.00179f, -0.40425f, -0.36798f, 0.04967f, 0.87791f, -0.18839f, -0.51138f, 0.22254f, 0.04544f, -1.20931f, 0.67825f, -1.16601f};
        A0A = fArr2;
        Matrix matrix = new Matrix(new float[][]{new float[]{0.09762f, 0.07956f, -0.18948f, -0.16682f, 0.09079f, 0.08402f, -0.16899f, -0.16452f, -0.22729f, 0.12417f, -0.1763f, -0.19091f, -0.13678f, -0.10986f, -0.1554f, 0.07363f, 0.10986f, 0.10424f, 0.07124f, 0.09571f, -0.15243f, 0.07874f, 0.07929f, 0.09063f, 0.07106f, 0.09178f, -0.26148f, 0.11163f, 0.08533f, 0.1286f, 0.10582f, -0.14757f}});
        A09 = matrix;
        float[] fArr3 = {-0.07312f};
        A0B = fArr3;
        A06 = new Matrix[]{A0P, matrix};
        A07 = new float[][]{fArr2, fArr3};
        A00 = new Matrix(new float[][]{new float[]{0.5804f, 3.72137f, 1.78466f, 0.964f, 0.04538f, 2.35418f, 3.85774f, 0.73254f, 0.24824f, 0.4813f, 17.39986f, 3.909f, 0.50978f, 0.4874f, 0.51991f, 2.80192f, 0.53832f, 13.31698f, 0.39446f, 0.77124f, -0.03446f, 1.69311f, 2.58625f, 0.44691f, 3.31323f, 15.71194f, 28.98644f, 2.25672f, 2.31213f, 4.63366f, 0.73133f, 4.41077f, 2.98706f, 1.73341f, 19.63906f, 34.18728f, 17.75611f, 59.875f}, new float[]{1.13912f, 0.56069f, 0.59662f, 1.59597f, 2.26856f, 0.35451f, 1.07815f, 0.82606f, 9.84827f, 2.48439f, 0.84439f, 1.57601f, 1.10191f, 1.1708f, 2.17888f, 0.38993f, 0.70995f, 0.84094f, 0.63253f, 0.72951f, 2.37693f, 1.27895f, 1.14568f, 1.61092f, 0.38913f, 0.71761f, 9.83476f, 0.47646f, 1.0269f, 1.36756f, 0.48951f, 3.72319f}});
        A01 = new Matrix(new float[][]{new float[]{-0.09723f, -0.06278f, 0.38195f, -0.15141f, 0.02694f, 0.12336f, 1.57927f, 0.01692f, 0.01136f, -0.11141f, 0.62694f, 0.82684f, -0.03263f, -0.04572f, -0.16058f, 0.82204f, -0.02121f, 0.60495f, 0.06104f, 0.09862f, 0.0262f, 0.13192f, 0.1008f, -0.01669f, -0.03725f, 0.33285f, 0.6519f, 0.05186f, 0.09678f, 0.01122f, 0.02123f, -0.3051f, 0.00184f, -0.02819f, 0.24465f, 0.40344f, 0.48004f, 0.70072f}, new float[]{-0.48438f, -0.5734f, -0.39233f, -0.33353f, -0.30315f, -0.57552f, -0.42823f, -0.37616f, -0.14256f, -0.22185f, -0.38028f, -0.28772f, -0.43564f, -0.48318f, -0.39409f, -0.50765f, -0.44404f, -0.41626f, -0.53767f, -0.51954f, -0.25047f, -0.50062f, -0.28798f, -0.31758f, -0.59689f, -0.53069f, -0.09371f, -0.40813f, -0.56668f, -0.20829f, -0.52702f, -0.19514f}});
    }
}
