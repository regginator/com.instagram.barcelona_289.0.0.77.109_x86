package p000X;

import com.facebook.dcp.model.Matrix;
import com.facebook.react.uimanager.BaseViewManager;
import java.util.List;
/* renamed from: X.J4S */
/* loaded from: classes7.dex */
public final class J4S {
    public static final Matrix A00;
    public static final Matrix A01;
    public static final List A02;
    public static final float[] A03;
    public static final float[] A04;
    public static final int[] A05;
    public static final Matrix[] A06;
    public static final float[][] A07;
    public static final Matrix A08;
    public static final Matrix A09;
    public static final float[] A0A;
    public static final float[] A0B;

    static {
        String[] strArr = new String[51];
        System.arraycopy(new String[]{"3589", "3591", "3320", "3314", "3795", "3794", "3282", "3312", "3308", "3306", "3318", "3796", "3321", "3315", "3295", "3613", "3797", "3343", "3283", "3279", "2620", "3598", "3305", "3605", "3281", "3595", "3291"}, 0, strArr, 0, 27);
        System.arraycopy(new String[]{"3309", "3272", "3288", "3819", "3820", "3821", "3822", "3823", "3824", "3825", "3826", "3827", "3828", "3829", "3830", "3831", "3832", "3833", "3834", "3835", "3836", "3837", "3838", "3839"}, 0, strArr, 27, 24);
        A02 = C14200aH.A17(strArr);
        A05 = new int[]{32, 1};
        A03 = new float[]{1.68508442E9f, 1.68508442E9f, 1.0f, 1.0f, BaseViewManager.CAMERA_DISTANCE_NORMALIZATION_MULTIPLIER, BaseViewManager.CAMERA_DISTANCE_NORMALIZATION_MULTIPLIER, 1.0f, 17.0f, 1.0f, 15.0f, 14.0f, BaseViewManager.CAMERA_DISTANCE_NORMALIZATION_MULTIPLIER, 2.0f, 2.0f, 0.80467f, 4963887.0f, BaseViewManager.CAMERA_DISTANCE_NORMALIZATION_MULTIPLIER, 5986.0f, 2.0f, 139.0835f, 5.9047E7f, 28.0f, 2566.7437f, 1.0f, 20.0f, 30.0f, 14.0f, 2.0f, 12.0f, 12.0f, BaseViewManager.CAMERA_DISTANCE_NORMALIZATION_MULTIPLIER, BaseViewManager.CAMERA_DISTANCE_NORMALIZATION_MULTIPLIER, BaseViewManager.CAMERA_DISTANCE_NORMALIZATION_MULTIPLIER, BaseViewManager.CAMERA_DISTANCE_NORMALIZATION_MULTIPLIER, BaseViewManager.CAMERA_DISTANCE_NORMALIZATION_MULTIPLIER, BaseViewManager.CAMERA_DISTANCE_NORMALIZATION_MULTIPLIER, BaseViewManager.CAMERA_DISTANCE_NORMALIZATION_MULTIPLIER, BaseViewManager.CAMERA_DISTANCE_NORMALIZATION_MULTIPLIER, BaseViewManager.CAMERA_DISTANCE_NORMALIZATION_MULTIPLIER, BaseViewManager.CAMERA_DISTANCE_NORMALIZATION_MULTIPLIER, BaseViewManager.CAMERA_DISTANCE_NORMALIZATION_MULTIPLIER, BaseViewManager.CAMERA_DISTANCE_NORMALIZATION_MULTIPLIER, BaseViewManager.CAMERA_DISTANCE_NORMALIZATION_MULTIPLIER, BaseViewManager.CAMERA_DISTANCE_NORMALIZATION_MULTIPLIER, BaseViewManager.CAMERA_DISTANCE_NORMALIZATION_MULTIPLIER, BaseViewManager.CAMERA_DISTANCE_NORMALIZATION_MULTIPLIER, BaseViewManager.CAMERA_DISTANCE_NORMALIZATION_MULTIPLIER, BaseViewManager.CAMERA_DISTANCE_NORMALIZATION_MULTIPLIER, BaseViewManager.CAMERA_DISTANCE_NORMALIZATION_MULTIPLIER, BaseViewManager.CAMERA_DISTANCE_NORMALIZATION_MULTIPLIER, BaseViewManager.CAMERA_DISTANCE_NORMALIZATION_MULTIPLIER};
        A04 = new float[]{1209600.0f, 1209600.0f, 6.0f, 4.0f, 1.0f, 1.0f, 10.0f, 51.0f, 6.0f, 48.0f, 58.0f, 1.0f, 20.0f, 22.0f, 1.24145f, 7914209.0f, 1.0f, 47319.0f, 22.0f, 385.2544f, 7.8383E7f, 8.0f, 8068.7544f, 0.5f, 62.0f, 8.0f, 63.0f, 20.0f, 69.0f, 65.0f, 1.0f, 1.0f, 1.0f, 1.0f, 1.0f, 1.0f, 1.0f, 1.0f, 1.0f, 1.0f, 1.0f, 1.0f, 1.0f, 1.0f, 1.0f, 1.0f, 1.0f, 1.0f, 1.0f, 1.0f, 1.0f};
        float[][] fArr = new float[32];
        System.arraycopy(new float[][]{new float[]{0.16517f, 0.113f, 0.20505f, 0.00844f, 0.10315f, 0.01442f, -0.16449f, -0.24375f, -0.65875f, 0.04646f, 0.2022f, 0.04647f, -0.22113f, -0.38223f, -0.82376f, -0.12633f, 0.05296f, 0.0121f, 0.09443f, 0.04038f, 0.10405f, 0.02491f, 0.19693f, -0.14155f, -0.12275f, 0.17455f, 0.21332f, 0.06339f, -0.15746f, 0.12996f, 0.05135f, -0.10868f, -0.31291f, -0.16676f, 0.14136f, 0.02567f, 0.03271f, 0.08808f, -0.32272f, -0.25537f, -0.19957f, 0.05741f, 0.0432f, -0.15047f, -0.0166f, -0.03103f, -0.24921f, 0.15548f, 0.09496f, 0.06227f, -0.02408f}, new float[]{0.16394f, 0.28964f, 0.0939f, 0.22392f, -0.23404f, -0.29325f, -0.46079f, 0.02705f, 0.00863f, -0.13225f, 0.0677f, -0.04621f, -0.54462f, -0.50916f, -0.41377f, -0.23653f, 0.25997f, 0.03f, -0.11073f, -0.41336f, -0.00456f, 0.09338f, 0.41297f, 0.45554f, 0.19368f, -0.10183f, -0.08723f, -0.46807f, -0.01589f, 0.10653f, 0.26788f, -0.20001f, -0.40966f, -0.08008f, 0.21405f, 0.24317f, 0.26176f, 0.16047f, -0.10906f, -0.20742f, -0.33465f, 0.03011f, 0.08317f, -0.206f, 0.06221f, 0.05187f, -0.43388f, 0.32378f, -0.02488f, 0.11196f, -0.2764f}, new float[]{0.09238f, 0.048f, -0.09641f, 0.16263f, -0.03166f, -0.0489f, 0.07313f, 0.50141f, 0.07258f, 0.19949f, -0.43203f, -0.13964f, 0.01756f, -0.08035f, 0.10594f, -0.08424f, 0.18523f, -0.15389f, 0.20985f, -0.19268f, 0.24207f, -0.11035f, -0.4585f, 0.25133f, -0.13612f, 0.07314f, -0.22871f, -0.01896f, 0.38017f, 0.04479f, 0.05172f, -0.24703f, -0.25873f, -0.32285f, 0.08509f, 0.11245f, -0.00175f, 0.07623f, -0.3138f, -0.18853f, -0.27877f, 0.07984f, 0.08051f, -0.30606f, 0.02922f, 0.04094f, -0.22816f, 0.20738f, -0.00351f, 0.00277f, -0.13349f}, new float[]{-0.03948f, -0.02218f, -0.12201f, 0.0474f, -0.13382f, -0.25919f, 0.00369f, 0.14092f, 0.02473f, -0.03786f, -0.20113f, -0.08145f, 0.04916f, 0.09376f, 0.05136f, -0.04648f, 0.14559f, 0.01209f, -0.05298f, 0.02808f, 0.14239f, 0.53411f, 0.10145f, 0.14517f, -0.11232f, 0.14302f, 0.30597f, -0.11532f, 0.47789f, -1.26298f, 0.01171f, -0.21597f, -0.14573f, -0.01641f, 0.02346f, 0.1814f, 0.07654f, 0.08363f, -0.17687f, -0.11214f, -0.21399f, 0.03916f, 0.01762f, -0.18387f, 0.02198f, 0.11315f, -0.13786f, 0.0969f, 0.03245f, 0.05281f, -0.06792f}, new float[]{-0.08697f, -0.0879f, 0.10064f, -0.13196f, 0.06999f, -0.0471f, 0.02659f, -0.48367f, -0.1616f, -0.34071f, -0.15976f, -0.16987f, -0.01026f, -0.35237f, -0.32642f, 0.24104f, -0.00625f, -0.54491f, 0.32248f, 0.0193f, -0.11103f, 0.64143f, 0.28743f, -0.18472f, -0.36799f, 0.14648f, -0.24462f, 0.009f, 0.27746f, 0.25458f, -0.04544f, -0.16015f, -0.14461f, -0.07469f, 0.0508f, -0.13407f, 0.01558f, 0.01721f, -0.0816f, -0.17634f, -0.09801f, -0.03963f, 0.09387f, -0.07633f, 0.25102f, 0.10929f, -0.1269f, 0.08473f, 0.04606f, 0.13483f, 0.11869f}, new float[]{0.2148f, 0.30355f, -0.47155f, -1.13632f, -0.02642f, 0.16029f, -0.05775f, -0.30123f, 0.00125f, -0.04666f, 0.17685f, 0.0013f, -0.14556f, 0.30798f, -0.06456f, 0.18889f, 0.0075f, 0.08595f, 0.11561f, -0.04209f, -0.02143f, -0.09432f, 0.06602f, 0.08475f, -0.27065f, 0.16595f, 0.15953f, -0.15359f, 0.13422f, 0.16498f, 0.14757f, 0.17644f, -0.01081f, -0.15142f, -0.31471f, -0.05441f, -0.3092f, 0.33284f, 0.29618f, -0.00357f, 0.26664f, -0.39377f, -0.33968f, -0.27412f, -0.12508f, -0.29322f, 0.06458f, -0.03529f, 0.08607f, 0.00662f, -0.00386f}, new float[]{0.06811f, 0.07525f, 0.09723f, 0.02316f, -0.0444f, 0.02197f, -0.50682f, 0.30357f, -0.01142f, 0.10157f, -0.11365f, -0.20865f, -0.14299f, 0.31737f, 0.03571f, -0.03291f, 0.08355f, -0.64694f, -0.84054f, 0.2723f, -0.0042f, -0.10104f, -0.3198f, -0.08541f, 0.01168f, 0.55198f, 0.35978f, -0.35551f, -0.04307f, -0.4174f, 0.02931f, -0.02472f, -0.26132f, 0.0218f, 0.05355f, -0.12247f, 0.26051f, 0.06893f, -0.19469f, -0.20257f, -0.02251f, -0.05877f, 0.01283f, -0.0243f, 0.08124f, 0.03051f, 0.04394f, -0.12155f, 0.11049f, 0.03866f, 0.07161f}, new float[]{0.27363f, -0.11973f, -0.54825f, -0.17739f, -0.04872f, 0.10974f, 0.16051f, 0.21612f, 0.33667f, 0.08749f, -0.37244f, 0.15091f, -0.30285f, 0.16194f, -0.09447f, -0.76063f, -0.01816f, 0.02009f, -0.25982f, 0.04475f, 0.21392f, 0.65115f, 0.05661f, 0.11676f, -0.32309f, 0.36984f, 0.15317f, -0.64573f, 0.05251f, 0.15232f, 0.11897f, 0.05627f, -0.11362f, -0.31199f, -0.31264f, -0.07097f, 0.09573f, -0.00263f, -8.0E-5f, -0.17457f, -0.07716f, -0.09048f, -0.1766f, 0.03019f, 0.0016f, 0.00354f, 0.12506f, -0.10154f, 0.15169f, -0.16912f, -0.09154f}, new float[]{0.02823f, 0.19366f, -1.29534f, -0.19598f, 0.08274f, 0.02691f, 0.21149f, 0.1795f, 0.30114f, 0.09133f, 0.10642f, -0.11038f, -0.44075f, 0.02083f, -0.27055f, 0.21061f, -0.0447f, 0.06809f, 0.1572f, -0.14495f, 0.13917f, 0.49826f, 0.01496f, 0.57797f, -0.02203f, 0.53493f, 0.16241f, -0.47331f, -0.02214f, -0.10267f, 0.04129f, -0.09414f, -0.01081f, -0.03503f, 0.02031f, -0.02046f, 0.02767f, 0.14725f, -0.24375f, -0.25114f, -0.09537f, 0.05133f, 0.07934f, -1.2E-4f, 0.0242f, -0.1071f, -0.08372f, -0.13455f, 0.04682f, 0.05275f, -0.11184f}, new float[]{-0.02173f, -0.00368f, 0.0298f, 0.11465f, -0.08573f, 0.0051f, -0.07452f, -0.10786f, 0.0884f, 0.02157f, 0.45662f, -0.03492f, 0.07109f, -0.03066f, -0.00369f, -0.10152f, -0.15303f, 0.06957f, 0.25182f, -0.01091f, -0.10468f, 0.06384f, -0.02905f, -0.01461f, 0.1989f, -0.05786f, -1.92458f, -0.06824f, -0.64387f, 0.06564f, -0.2569f, -0.18573f, 0.17798f, 0.03046f, 0.06101f, -0.19466f, -4.3E-4f, -0.20091f, -0.03694f, 0.11493f, 0.11833f, -0.06812f, 0.02666f, 0.00882f, -0.00817f, 0.01539f, -0.07828f, 0.05647f, -0.21901f, 0.02932f, 0.12552f}, new float[]{0.00542f, 0.07248f, -0.15464f, -0.25233f, 0.05056f, 0.10974f, 0.04085f, -0.15139f, 0.25474f, 0.03821f, 0.34242f, -0.00656f, 0.15629f, -0.33776f, 0.09587f, -0.00419f, -0.07139f, 0.01106f, 0.11087f, -0.11504f, -0.11158f, 0.00188f, 0.30968f, -0.06479f, 8.7E-4f, -0.1955f, -1.02317f, 0.10639f, -0.89593f, -0.42057f, 0.02526f, 0.07733f, -0.10526f, 0.25599f, 0.02776f, -0.25255f, 0.2518f, -0.20421f, -0.11201f, 0.10474f, 0.24887f, -0.21944f, 0.06367f, 0.02673f, 0.05137f, 0.13117f, -0.03915f, 0.02307f, -0.05103f, -0.03906f, -0.03501f}, new float[]{0.1666f, 0.21102f, 0.09768f, 0.19436f, -0.17433f, -0.15983f, -0.13837f, -0.06981f, 0.32169f, -0.16786f, -0.28995f, 0.04137f, -0.12697f, 0.12979f, 0.1592f, 0.17574f, -0.05753f, 0.02985f, 0.22874f, -0.179f, 0.05971f, 0.88955f, -0.08056f, -0.01638f, -0.35499f, 0.67194f, -0.07651f, -0.27369f, 0.33649f, 0.34669f, -0.24906f, -0.01805f, 0.09322f, -0.03767f, -0.1179f, 0.01136f, -0.08036f, -0.1203f, 0.10014f, -0.06393f, -0.07597f, -0.09781f, -0.18669f, 0.02037f, -0.19097f, -0.09291f, -0.23414f, -0.06249f, -0.27508f, -0.19531f, -0.21158f}, new float[]{0.18113f, -0.00148f, -0.04338f, 0.07338f, -0.1327f, -0.33618f, -0.09207f, 0.03644f, 0.061f, -0.11112f, 0.06999f, -0.36974f, -0.02965f, 0.00692f, -0.58105f, -0.04393f, 0.25809f, 0.0206f, 0.05666f, 0.01508f, -0.0231f, 0.07365f, 0.03581f, 0.40368f, -0.08827f, 0.0675f, -0.17038f, 0.02873f, -0.40208f, -0.23934f, 0.15866f, -0.41718f, -0.39498f, -0.206f, 0.33846f, 0.20851f, 0.1161f, 0.31429f, -0.43211f, -0.36717f, -0.44462f, 0.10109f, 0.19184f, -0.20889f, -0.00584f, 0.22953f, -0.17842f, 0.2415f, -0.00151f, 0.02692f, -0.2475f}, new float[]{0.02162f, -0.12074f, 0.01175f, -0.34204f, 0.01021f, -0.01057f, -1.07818f, 0.39178f, 0.16908f, -0.014f, -0.21732f, 0.12753f, -0.03021f, -0.11398f, 0.05824f, -0.95164f, 0.09513f, -0.75137f, -0.18661f, 0.16294f, -0.29898f, -0.19993f, 0.02802f, -0.05082f, 0.19513f, 0.1176f, 0.0341f, -0.04749f, 0.06343f, -0.19859f, 0.11379f, -0.2244f, -0.41139f, 0.12632f, 0.24977f, 0.00793f, 0.11802f, -0.09521f, -0.26049f, -0.09875f, -0.15739f, 0.12387f, 0.23858f, -0.14365f, 0.12215f, 0.19335f, 0.0361f, 0.18103f, 0.03372f, -0.04923f, -0.01899f}, new float[]{-0.12585f, -0.05819f, 0.09324f, 0.04253f, -0.01061f, -0.11269f, -0.04728f, -0.23746f, 0.16052f, -0.26295f, -0.31278f, 0.05058f, -0.02966f, 0.04141f, 0.17359f, 0.20374f, -0.08902f, 0.10721f, 0.00744f, -0.36363f, -0.02843f, -0.18118f, -0.01701f, 0.01961f, -0.5742f, 0.15343f, 0.20555f, 0.15723f, 0.46137f, 0.39185f, 0.19351f, -0.05236f, -0.0404f, -0.07535f, -0.35813f, -0.23138f, -0.3935f, 0.46778f, 0.13962f, -0.12031f, 0.21864f, -0.18574f, -0.22417f, -0.20273f, 0.10963f, -0.18479f, -0.04723f, -0.04204f, 0.05854f, -0.12803f, -0.04905f}, new float[]{-0.09506f, -0.24032f, -0.38879f, -0.19837f, -0.06593f, -0.01094f, 0.16755f, 0.24314f, 0.30187f, 0.08695f, -0.43642f, 0.11821f, -0.36492f, 0.29483f, 0.07223f, 0.15991f, 0.15027f, 0.00493f, 0.28356f, -0.24426f, 0.09664f, 0.94089f, -0.16554f, 0.52079f, 0.2036f, 0.57219f, -0.04985f, -0.52752f, 0.17716f, -0.02129f, 0.11157f, -0.07986f, 0.03646f, -0.17861f, -0.11124f, 0.08428f, 0.07841f, 0.30889f, 0.09134f, -0.16645f, 0.01692f, 0.1876f, -0.10201f, -0.18075f, 0.13544f, -0.04866f, 0.06517f, 0.10282f, 0.15033f, 0.14562f, -0.08084f}, new float[]{0.13755f, 0.02311f, 0.09499f, 0.01553f, -0.12002f, -0.05084f, -0.01235f, -0.07144f, -0.12306f, -0.06993f, 0.01297f, -0.12978f, 0.03269f, -0.00623f, -0.27324f, -0.07886f, 0.072f, -1.25725f, -0.16276f, 0.03281f, 0.03437f, 0.13164f, 0.00325f, 0.03645f, 0.03397f, -0.08849f, -0.83876f, -0.02856f, -0.03669f, 0.39297f, 0.01913f, -0.21483f, -0.23598f, -0.16981f, 0.22851f, 0.25102f, 0.02147f, 0.09343f, -0.17004f, -0.27154f, -0.10149f, 0.10723f, -0.01518f, -0.21233f, -0.06431f, 0.16185f, -0.27447f, 0.22158f, -0.1114f, 0.03115f, -0.25775f}, new float[]{0.04274f, -0.04132f, 0.17407f, -0.34744f, -0.22057f, -0.13714f, -0.07884f, 0.18354f, 0.11491f, 0.01501f, 0.0265f, -0.18881f, -0.65992f, -0.16374f, -0.2511f, 0.16823f, 0.09839f, -0.26023f, 0.05252f, -0.31231f, -0.20508f, 0.1554f, -0.7997f, -0.20673f, 0.11201f, -0.04513f, -0.11731f, -0.76909f, 0.05217f, 0.23276f, 0.03048f, -0.20011f, -0.29594f, -0.23308f, 0.14809f, 0.10784f, -0.09503f, 0.00282f, -0.27379f, -0.24941f, -0.13139f, -0.05313f, 0.13121f, -0.20544f, -0.05262f, 0.21316f, -0.23047f, 0.1337f, -0.04001f, 0.01733f, -0.05836f}, new float[]{0.07733f, 0.25776f, 0.07519f, 0.02528f, -0.03711f, 0.06978f, 0.03265f, -0.07462f, -0.19621f, 0.0011f, -0.1225f, 0.05493f, 0.06958f, 0.05558f, -0.07465f, 0.07693f, -0.02039f, -1.95197f, -0.16221f, 0.06549f, -0.03535f, 0.05106f, 0.12587f, 0.07412f, 0.13095f, 0.04443f, -0.47501f, -0.14245f, 0.20205f, -0.00306f, -0.11659f, 0.01035f, -0.10083f, 0.10147f, 0.03941f, -0.17398f, -0.03349f, -0.42371f, 0.01651f, 0.12238f, 0.00396f, -0.18241f, -0.04219f, -0.00705f, 0.12577f, -0.08035f, 0.17377f, -0.18066f, -0.03819f, 0.07415f, 0.05746f}, new float[]{-0.01141f, -0.13007f, 0.30179f, -0.05289f, -0.06863f, 0.17609f, -0.1759f, -0.21322f, 0.02454f, -0.18462f, -0.36302f, 0.05329f, 0.119f, -0.02487f, 0.14942f, 0.19992f, -0.04554f, 0.07695f, 0.15477f, -0.29932f, 0.04746f, -0.07461f, 0.04888f, 0.02562f, -0.52898f, 0.10642f, 0.10387f, -0.03399f, 0.5428f, 0.47193f, 0.14842f, 0.10825f, 0.20433f, -0.17425f, -0.249f, 0.19955f, -0.10987f, 0.46427f, 0.15932f, -0.02864f, -0.2305f, 0.30165f, -0.23496f, -0.17347f, 0.02226f, -0.08487f, 0.12284f, -0.08838f, 0.06428f, 0.10974f, -0.03568f}, new float[]{-0.12391f, -0.0616f, -0.12111f, 0.01694f, -0.06065f, -0.2095f, -0.1606f, -0.0203f, 0.1266f, -0.05906f, -0.10391f, -0.06129f, 0.11105f, 0.0689f, 0.09966f, 0.13834f, 0.10447f, 0.01881f, 0.20076f, -0.03255f, -0.12809f, 0.05271f, 0.01396f, -0.00681f, 0.04131f, -0.02216f, -1.74764f, -0.04085f, -0.82185f, 0.54773f, 0.13538f, -0.14128f, -0.26382f, -0.08419f, 0.0977f, 0.14095f, 0.20129f, 0.19813f, -0.22195f, -0.0615f, -0.1728f, 0.21773f, 0.11865f, -0.16824f, 0.16157f, 0.11581f, -0.11083f, 0.12257f, 0.0456f, 0.11344f, -0.17412f}, new float[]{0.1422f, 0.19229f, 0.01914f, -0.03049f, -0.15968f, -0.17133f, -0.05317f, -0.17936f, -0.00203f, -0.5369f, -0.44827f, -0.12566f, -0.09347f, -0.09701f, -0.35284f, 0.07373f, 0.11222f, -1.4758f, 0.17607f, -0.04662f, -0.14042f, 0.10466f, 0.06013f, 0.04984f, -0.17988f, -0.13231f, 0.06865f, 0.12299f, 0.03933f, 0.13327f, 0.05516f, -0.22298f, -0.4028f, -0.10743f, 0.18147f, 0.09735f, 0.10103f, 0.07281f, -0.29155f, -0.18132f, -0.13921f, 0.02078f, 0.14561f, -0.20003f, 0.13941f, 0.2229f, -0.30238f, 0.16578f, 0.02726f, -0.02373f, -0.05326f}, new float[]{0.08263f, -0.10893f, -0.33282f, -0.25747f, 0.15289f, -0.14934f, -0.02905f, -0.00569f, 0.41892f, 0.08088f, 0.13716f, 0.00529f, 0.02756f, -0.2739f, 0.16655f, 0.11581f, -0.02727f, 0.06674f, 0.36091f, -0.22056f, 0.04213f, -0.04118f, 0.19078f, -0.06299f, 0.06464f, -0.022f, -0.06479f, 0.11671f, -1.47573f, -0.69704f, -0.11289f, -0.15076f, -0.08829f, 0.2147f, 0.09702f, -0.27331f, 0.28146f, -0.33693f, -0.25976f, -0.04164f, 0.14231f, -0.01951f, 0.10305f, 0.02833f, 0.04915f, 0.19563f, 0.00446f, 0.17884f, 0.06791f, -0.03025f, 0.07675f}, new float[]{0.36544f, -0.03535f, -0.0042f, 0.13135f, -0.10885f, -0.47914f, -0.05289f, 0.25179f, -0.08261f, -0.01924f, 0.07529f, -0.40495f, -0.16164f, 0.03475f, 0.32918f, 0.01488f, 0.45592f, 0.13786f, -0.07666f, 0.14071f, -0.39535f, 0.02953f, -0.03433f, 0.27576f, 0.16656f, 0.55151f, -0.23208f, 0.11383f, 0.15242f, 0.46094f, 0.19473f, -0.59526f, -0.47118f, -0.12751f, 0.33333f, 0.26826f, 0.49436f, 0.16619f, -0.38679f, -0.50189f, -0.52813f, 0.06302f, 0.31806f, -0.35277f, 0.13321f, 0.40521f, -0.51778f, 0.28478f, -0.0058f, 0.20905f, -0.20454f}, new float[]{-0.07386f, -0.18666f, -0.18184f, -0.24026f, 0.02526f, -0.11836f, -0.01579f, 0.02084f, 0.32871f, 0.14732f, 0.10941f, -0.0097f, 0.0803f, -0.15396f, 0.03156f, -0.07496f, 0.02232f, -0.01632f, -0.0131f, -0.11978f, -0.02488f, 0.09382f, 0.08752f, -0.02882f, -0.19352f, -0.10264f, -0.54584f, 0.11107f, 0.91206f, -1.15442f, -0.19181f, -0.16187f, 0.11292f, 0.19211f, 0.07884f, 0.03034f, -0.11624f, -0.14498f, -0.05931f, -0.17679f, -0.14011f, 0.12951f, 0.02003f, -0.17432f, 0.21126f, 0.11051f, -0.0079f, 0.02143f, 0.01112f, 0.2037f, 0.05365f}, new float[]{-0.26099f, -0.3884f, -0.29029f, 0.35288f, 0.0686f, 0.08413f, -0.0013f, 0.04502f, 0.40521f, 0.05718f, 0.16099f, 0.13627f, -0.32608f, 0.10421f, 0.09852f, 0.32312f, 0.16886f, -0.00901f, 0.42013f, -0.50196f, 0.22213f, 0.3291f, -0.0091f, -0.19904f, 0.20242f, -0.00998f, -0.14045f, -0.61073f, -0.13358f, 0.30424f, 0.09709f, 0.10207f, -0.05015f, -0.29978f, 0.01941f, 0.09199f, -0.10902f, 0.22206f, -0.01956f, -0.34398f, 0.1344f, 0.0238f, -0.11147f, -0.43908f, 0.07197f, -0.06058f, -0.07497f, 0.25387f, 0.13183f, 0.06265f, -0.03206f}, new float[]{0.20244f, 0.10415f, 0.06285f, -0.36896f, -0.21599f, -0.12383f, -0.26881f, -0.21101f, 0.11309f, -0.21652f, 0.31837f, -0.21773f, 0.09807f, 0.21325f, -0.38655f, 0.07511f, 0.15665f, -0.19792f, -0.03953f, -0.45817f, 0.13829f, -0.09811f, 0.10158f, -0.39772f, -0.03021f, 0.91144f, -0.1f, 0.06643f, -0.05007f, 0.26847f, -0.07488f, -0.23096f, -0.24197f, -0.32597f, 0.39801f, 0.20669f, 0.06038f, -0.06996f, -0.29836f, -0.63592f, -0.29103f, 0.22992f, 0.12239f, -0.27591f, 0.08885f, 0.2741f, -0.28701f, 0.11843f, 0.0451f, -0.12172f, -0.27798f}}, 0, fArr, 0, 27);
        Matrix A0P = C34903Hvd.A0P(new float[][]{new float[]{0.08093f, 0.02975f, 0.08001f, 0.11601f, 0.07269f, 0.02164f, 0.08275f, 0.07124f, 0.04746f, 0.0728f, 0.03093f, -0.08276f, -0.26407f, -1.21527f, 0.05297f, -0.13925f, -0.06286f, -0.00292f, -0.28293f, 0.04215f, 0.06499f, 0.09988f, -0.06556f, 0.23149f, -0.05181f, -0.05404f, -0.10477f, 0.0967f, 0.42792f, -1.1461f, -0.09816f, -0.25378f, 0.05209f, -0.0063f, -0.04499f, 0.03035f, -0.07162f, 0.1065f, -0.18947f, 0.00299f, 0.085f, -0.12092f, -0.08867f, 0.08315f, -0.03967f, -0.12092f, -0.19283f, 0.15419f, -0.02217f, 0.03845f, -0.09488f}, new float[]{0.13583f, 0.1353f, -0.08166f, -0.21496f, 0.02589f, 0.01208f, 0.07582f, 0.194f, 0.24825f, 0.1273f, -0.4675f, 0.10158f, -0.04836f, 0.21684f, -0.18096f, -0.06722f, 0.01802f, 0.15564f, -0.06694f, 0.00651f, 0.22901f, 0.54096f, -0.32257f, 0.07928f, -0.27915f, 0.69652f, -0.17791f, -0.08666f, 0.3355f, 0.30838f, 0.03692f, 0.17122f, 0.08931f, -0.03549f, -0.32391f, -0.04116f, -0.06274f, 0.08846f, 0.44522f, 0.18546f, 0.3526f, -0.2166f, -0.21744f, -0.27424f, -0.01747f, -0.22363f, -0.01388f, 0.07982f, 0.04985f, -0.11237f, -0.03427f}, new float[]{-0.13929f, -0.04019f, -0.01081f, 0.0472f, -0.12024f, -0.04074f, 0.00919f, 0.21279f, 0.27389f, -0.07392f, -0.54906f, -0.11662f, -0.3726f, -0.00288f, -0.01104f, -0.85157f, 0.02039f, 0.04821f, -0.07129f, 0.09212f, -0.13838f, 0.38352f, 0.02998f, -0.02176f, -0.17031f, 0.63653f, -0.05664f, -0.57034f, 0.08578f, 0.30259f, -0.01272f, -0.15341f, 0.14526f, 0.00949f, -0.01738f, 0.20907f, -0.01164f, 0.17365f, -0.17993f, -0.14688f, -0.43258f, 0.17297f, 0.02073f, 0.04725f, 0.04626f, 0.01041f, -0.01924f, -0.05004f, 0.03118f, -0.11817f, -0.03951f}, new float[]{0.18341f, 0.31609f, 0.00583f, 0.07556f, 0.07136f, -0.01096f, 0.08845f, -0.19883f, 0.03829f, 0.08642f, -0.05012f, -0.03319f, 0.02022f, 0.36654f, -0.00962f, -0.02877f, -0.10073f, -0.4566f, -0.14591f, 0.06245f, -0.10581f, 0.12206f, -0.17627f, 0.51523f, 0.32388f, 0.09717f, 0.4739f, -0.28407f, -0.53088f, -0.4703f, 0.04684f, -0.0334f, -0.15949f, -0.02438f, -0.02617f, -0.04294f, 0.18662f, -0.04691f, 1.0E-4f, 0.01247f, 0.25721f, -0.31715f, 0.10708f, 0.15413f, -0.12209f, 0.02159f, -0.02788f, -0.05171f, -0.10188f, 0.00347f, 0.10586f}, new float[]{-0.11365f, -0.11203f, 0.0305f, 0.13552f, -0.03257f, -0.01209f, 0.17799f, -0.24432f, 0.03975f, 0.00782f, 0.53597f, -0.0366f, 0.10066f, -0.06078f, -0.11801f, -0.25388f, 0.0578f, 0.05909f, 0.27095f, -0.05887f, -0.04165f, 0.03298f, 0.07768f, 0.0465f, -0.10929f, -0.17272f, -1.49038f, -0.0192f, 0.19153f, -0.07801f, 6.0E-5f, -0.05447f, -0.30193f, 0.10529f, 0.04742f, -0.0141f, 0.25825f, -0.23235f, 0.00302f, 0.01633f, 0.23511f, 0.00595f, -0.02909f, 4.0E-4f, -0.0376f, -0.09543f, -0.074f, -0.09504f, -0.12242f, 0.02524f, -0.16026f}}, fArr);
        A08 = A0P;
        float[] fArr2 = {-0.27671f, -0.34044f, -0.25042f, -0.19691f, -0.07966f, 0.21742f, -0.02272f, 0.10915f, -0.14273f, -0.11354f, 0.12576f, 0.16694f, -0.45427f, -0.17724f, 0.18517f, -0.01255f, -0.20371f, -0.39626f, 0.07511f, 0.21587f, -0.23119f, -0.28311f, -0.22604f, -0.50491f, -0.02503f, -0.03644f, -0.43974f, -0.17452f, 0.08024f, -0.06311f, -0.07165f, 0.07193f};
        A0A = fArr2;
        Matrix matrix = new Matrix(new float[][]{new float[]{0.15608f, 0.1499f, 0.14449f, -0.16879f, -0.13892f, 0.09277f, -0.13935f, 0.12198f, 0.1224f, -0.12016f, -0.11503f, 0.10821f, 0.20873f, -0.13947f, 0.14521f, 0.10847f, -0.18183f, -0.24166f, -0.13772f, 0.10076f, -0.14982f, -0.18428f, -0.10444f, -0.20519f, -0.13827f, 0.11781f, 0.19133f, -0.13628f, 0.09405f, 0.13174f, -0.12076f, -0.11996f}});
        A09 = matrix;
        float[] fArr3 = {0.08445f};
        A0B = fArr3;
        A06 = new Matrix[]{A0P, matrix};
        A07 = new float[][]{fArr2, fArr3};
        A00 = new Matrix(new float[][]{new float[]{0.004f, 0.00579f, 0.38556f, 0.27546f, 0.00123f, 1.2E-4f, 0.53928f, 2.69061f, 0.36606f, 0.92079f, 2.89591f, 9.8E-4f, 0.58539f, 0.82864f, 3.24727f, 2.8265f, 2.2E-4f, 2.06114f, 0.34788f, 0.77092f, 0.28139f, 2.11943f, 3.61118f, 2.87464f, 1.71487f, 1.89368f, 3.97501f, 0.66846f, 3.69527f, 4.74932f, 0.00722f, 0.00439f, 26.90677f, 5.66547f, 0.99237f, 24.03608f, 4.80253f, 2.3548f, 55.6843f, 5.12935f, 3.87699f, 43.87334f, 5.60029f, 3.91514f, 0.02461f, 0.20975f, 0.17577f, 20.3864f, 1.85171f, 0.34405f, 14.65406f}, new float[]{3.98187f, 6.75242f, 4.33763f, 4.39771f, 3.96105f, 1.27988f, 3.87926f, 2.11989f, 4.25674f, 1.14117f, 0.87345f, 1.03793f, 5.47281f, 4.69329f, 0.59422f, 3.27019f, 4.11739f, 7.32638f, 1.67358f, 0.63733f, 1.9911f, 3.40382f, 1.28335f, 1.38867f, 2.12194f, 1.63716f, 5.31235f, 2.23732f, 1.49176f, 2.28715f, 2.09007f, 1.25642f}});
        A01 = new Matrix(new float[][]{new float[]{-0.12207f, -0.06041f, -0.03281f, 0.15562f, -0.0152f, 0.04669f, 0.09554f, -0.29143f, 0.10748f, 0.09936f, -0.27609f, 0.07792f, 0.07662f, -0.08012f, 0.70105f, 1.59749f, -0.01924f, 0.08821f, -0.02359f, 0.02634f, 0.0076f, 0.07427f, -0.16596f, 0.19846f, -0.0236f, 0.07476f, 0.23397f, 0.02707f, -0.01721f, -0.12982f, 0.00124f, 0.21971f, 0.19642f, 0.0402f, -0.19989f, -0.00969f, -0.00949f, -0.03243f, 0.1345f, 0.1941f, 0.19709f, 0.00125f, -0.01538f, 0.03022f, -0.03278f, -0.09666f, 0.08466f, -0.04055f, -0.01936f, 0.01016f, 0.0225f}, new float[]{-0.27826f, -0.14695f, -0.26017f, -0.42443f, -0.24406f, -0.46996f, -0.38423f, -0.51456f, -0.28512f, -0.70408f, -0.68466f, -0.40192f, -0.27917f, -0.24451f, -0.45216f, -0.44634f, -0.24226f, -0.14854f, -0.46f, -0.42696f, -0.53436f, -0.22611f, -0.7079f, -0.19196f, -0.73341f, -0.39321f, -0.19848f, -0.63374f, -0.52315f, -0.28231f, -0.54826f, -0.58254f}});
    }
}
